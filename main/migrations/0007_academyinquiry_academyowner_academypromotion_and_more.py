# Generated by Django 5.1.11 on 2025-08-31 09:10

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0006_alter_academyviewhistory_session_id"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AcademyInquiry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "inquiry_type",
                    models.CharField(
                        choices=[
                            ("enrollment", "입학 문의"),
                            ("curriculum", "커리큘럼 문의"),
                            ("tuition", "수강료 문의"),
                            ("schedule", "시간표 문의"),
                            ("facility", "시설 문의"),
                            ("other", "기타 문의"),
                        ],
                        max_length=20,
                        verbose_name="문의 유형",
                    ),
                ),
                (
                    "inquirer_name",
                    models.CharField(max_length=100, verbose_name="문의자명"),
                ),
                (
                    "inquirer_phone",
                    models.CharField(max_length=15, verbose_name="연락처"),
                ),
                (
                    "inquirer_email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="이메일"
                    ),
                ),
                ("subject", models.CharField(max_length=200, verbose_name="제목")),
                ("content", models.TextField(verbose_name="문의 내용")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("new", "신규"),
                            ("in_progress", "처리중"),
                            ("answered", "답변완료"),
                            ("closed", "완료"),
                        ],
                        default="new",
                        max_length=20,
                        verbose_name="처리 상태",
                    ),
                ),
                ("response", models.TextField(blank=True, verbose_name="응답 내용")),
                (
                    "responded_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="응답 시간"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="문의 시간"),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                        verbose_name="우선순위",
                    ),
                ),
                (
                    "academy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="inquiries",
                        to="main.data",
                        verbose_name="학원",
                    ),
                ),
                (
                    "responded_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="inquiry_responses",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="응답자",
                    ),
                ),
            ],
            options={
                "verbose_name": "학원 문의",
                "verbose_name_plural": "학원 문의들",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="AcademyOwner",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "role",
                    models.CharField(
                        choices=[
                            ("owner", "원장"),
                            ("manager", "관리자"),
                            ("staff", "직원"),
                        ],
                        default="owner",
                        max_length=20,
                        verbose_name="역할",
                    ),
                ),
                (
                    "can_edit_info",
                    models.BooleanField(default=True, verbose_name="정보 수정 권한"),
                ),
                (
                    "can_view_analytics",
                    models.BooleanField(default=True, verbose_name="분석 조회 권한"),
                ),
                (
                    "can_manage_content",
                    models.BooleanField(default=True, verbose_name="콘텐츠 관리 권한"),
                ),
                (
                    "can_respond_reviews",
                    models.BooleanField(default=True, verbose_name="리뷰 응답 권한"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="인증 여부"),
                ),
                (
                    "verification_documents",
                    models.TextField(blank=True, verbose_name="인증 문서"),
                ),
                (
                    "academy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owners",
                        to="main.data",
                        verbose_name="학원",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_academies",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="사용자",
                    ),
                ),
            ],
            options={
                "verbose_name": "학원 운영자",
                "verbose_name_plural": "학원 운영자들",
                "unique_together": {("user", "academy")},
            },
        ),
        migrations.CreateModel(
            name="AcademyPromotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(max_length=200, verbose_name="프로모션 제목"),
                ),
                ("description", models.TextField(verbose_name="프로모션 설명")),
                (
                    "promotion_type",
                    models.CharField(
                        choices=[
                            ("discount", "할인 혜택"),
                            ("free_trial", "무료 체험"),
                            ("gift", "사은품 증정"),
                            ("package", "패키지 상품"),
                            ("seasonal", "시즌 특가"),
                            ("referral", "추천 이벤트"),
                        ],
                        max_length=20,
                        verbose_name="프로모션 유형",
                    ),
                ),
                (
                    "discount_rate",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=5,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0")),
                            django.core.validators.MaxValueValidator(Decimal("100")),
                        ],
                        verbose_name="할인율(%)",
                    ),
                ),
                (
                    "discount_amount",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="할인 금액(원)"
                    ),
                ),
                ("start_date", models.DateTimeField(verbose_name="시작일")),
                ("end_date", models.DateTimeField(verbose_name="종료일")),
                (
                    "min_months",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="최소 수강 개월"
                    ),
                ),
                (
                    "max_participants",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="최대 참여자 수"
                    ),
                ),
                (
                    "current_participants",
                    models.IntegerField(default=0, verbose_name="현재 참여자 수"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="활성 상태"),
                ),
                (
                    "is_featured",
                    models.BooleanField(default=False, verbose_name="추천 프로모션"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "academy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="promotions",
                        to="main.data",
                        verbose_name="학원",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="created_promotions",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="생성자",
                    ),
                ),
            ],
            options={
                "verbose_name": "학원 프로모션",
                "verbose_name_plural": "학원 프로모션들",
                "ordering": ["-is_featured", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="OperatorDashboardSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(default=True, verbose_name="이메일 알림"),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(default=False, verbose_name="SMS 알림"),
                ),
                (
                    "review_alerts",
                    models.BooleanField(default=True, verbose_name="리뷰 알림"),
                ),
                (
                    "inquiry_alerts",
                    models.BooleanField(default=True, verbose_name="문의 알림"),
                ),
                (
                    "show_visitor_stats",
                    models.BooleanField(default=True, verbose_name="방문자 통계 표시"),
                ),
                (
                    "show_ranking_info",
                    models.BooleanField(default=True, verbose_name="순위 정보 표시"),
                ),
                (
                    "show_competitor_analysis",
                    models.BooleanField(default=False, verbose_name="경쟁사 분석 표시"),
                ),
                (
                    "show_revenue_tracking",
                    models.BooleanField(default=False, verbose_name="매출 추적 표시"),
                ),
                (
                    "weekly_report",
                    models.BooleanField(default=True, verbose_name="주간 리포트"),
                ),
                (
                    "monthly_report",
                    models.BooleanField(default=True, verbose_name="월간 리포트"),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "owner",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="dashboard_settings",
                        to="main.academyowner",
                        verbose_name="운영자",
                    ),
                ),
            ],
            options={
                "verbose_name": "대시보드 설정",
                "verbose_name_plural": "대시보드 설정들",
            },
        ),
        migrations.CreateModel(
            name="CompetitorAnalysis",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("distance_km", models.FloatField(verbose_name="거리(km)")),
                (
                    "price_comparison",
                    models.CharField(
                        choices=[
                            ("cheaper", "더 저렴"),
                            ("similar", "비슷함"),
                            ("expensive", "더 비쌈"),
                        ],
                        max_length=20,
                        verbose_name="가격 비교",
                    ),
                ),
                (
                    "rating_difference",
                    models.FloatField(blank=True, null=True, verbose_name="평점 차이"),
                ),
                ("strengths", models.JSONField(default=list, verbose_name="경쟁 우위")),
                (
                    "weaknesses",
                    models.JSONField(default=list, verbose_name="경쟁 열위"),
                ),
                (
                    "opportunities",
                    models.JSONField(default=list, verbose_name="기회 요소"),
                ),
                (
                    "last_analyzed",
                    models.DateTimeField(auto_now=True, verbose_name="최종 분석일"),
                ),
                (
                    "academy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="competitor_analyses",
                        to="main.data",
                        verbose_name="기준 학원",
                    ),
                ),
                (
                    "competitor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="as_competitor",
                        to="main.data",
                        verbose_name="경쟁 학원",
                    ),
                ),
            ],
            options={
                "verbose_name": "경쟁사 분석",
                "verbose_name_plural": "경쟁사 분석들",
                "unique_together": {("academy", "competitor")},
            },
        ),
        migrations.CreateModel(
            name="RevenueTracking",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("year", models.IntegerField(verbose_name="년도")),
                (
                    "month",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(12),
                        ],
                        verbose_name="월",
                    ),
                ),
                (
                    "student_count",
                    models.IntegerField(default=0, verbose_name="학생 수"),
                ),
                (
                    "total_revenue",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="총 매출",
                    ),
                ),
                (
                    "average_tuition",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="평균 수강료",
                    ),
                ),
                (
                    "operating_costs",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="운영비용",
                    ),
                ),
                (
                    "marketing_costs",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="마케팅 비용",
                    ),
                ),
                (
                    "net_profit",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        max_digits=12,
                        verbose_name="순이익",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "academy",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="revenue_records",
                        to="main.data",
                        verbose_name="학원",
                    ),
                ),
            ],
            options={
                "verbose_name": "매출 추적",
                "verbose_name_plural": "매출 추적들",
                "ordering": ["-year", "-month"],
                "unique_together": {("academy", "year", "month")},
            },
        ),
    ]
