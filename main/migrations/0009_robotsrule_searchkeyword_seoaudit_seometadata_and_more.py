# Generated by Django 5.1.11 on 2025-08-31 09:30

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("main", "0008_conversionfunnel_markettrend_regionalanalytics_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="RobotsRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_agent",
                    models.CharField(
                        default="*", max_length=100, verbose_name="사용자 에이전트"
                    ),
                ),
                (
                    "rule_type",
                    models.CharField(
                        choices=[("allow", "허용"), ("disallow", "차단")],
                        max_length=10,
                        verbose_name="규칙 유형",
                    ),
                ),
                ("path", models.CharField(max_length=255, verbose_name="경로")),
                ("is_active", models.BooleanField(default=True, verbose_name="활성화")),
                ("order", models.IntegerField(default=0, verbose_name="순서")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Robots 규칙",
                "verbose_name_plural": "Robots 규칙들",
                "ordering": ["order", "user_agent"],
            },
        ),
        migrations.CreateModel(
            name="SearchKeyword",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("keyword", models.CharField(max_length=100, verbose_name="키워드")),
                (
                    "search_count",
                    models.IntegerField(default=0, verbose_name="검색 횟수"),
                ),
                (
                    "click_count",
                    models.IntegerField(default=0, verbose_name="클릭 횟수"),
                ),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("region", "지역"),
                            ("subject", "과목"),
                            ("age", "연령대"),
                            ("brand", "브랜드"),
                            ("general", "일반"),
                        ],
                        default="general",
                        max_length=20,
                        verbose_name="카테고리",
                    ),
                ),
                (
                    "region_sido",
                    models.CharField(blank=True, max_length=50, verbose_name="시도"),
                ),
                (
                    "region_sigungu",
                    models.CharField(blank=True, max_length=50, verbose_name="시군구"),
                ),
                ("ctr", models.FloatField(default=0.0, verbose_name="클릭률 (%)")),
                (
                    "impression_count",
                    models.IntegerField(default=0, verbose_name="노출 횟수"),
                ),
                (
                    "trend_score",
                    models.FloatField(default=0.0, verbose_name="트렌드 점수"),
                ),
                (
                    "is_trending",
                    models.BooleanField(default=False, verbose_name="트렌딩 키워드"),
                ),
                (
                    "date",
                    models.DateField(
                        default=django.utils.timezone.now, verbose_name="날짜"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "검색 키워드",
                "verbose_name_plural": "검색 키워드들",
                "ordering": ["-search_count", "-trend_score"],
                "indexes": [
                    models.Index(
                        fields=["keyword", "date"],
                        name="main_search_keyword_6d60a5_idx",
                    ),
                    models.Index(
                        fields=["category", "region_sido"],
                        name="main_search_categor_eff5c1_idx",
                    ),
                    models.Index(
                        fields=["-search_count"], name="main_search_search__764f20_idx"
                    ),
                ],
                "unique_together": {("keyword", "date")},
            },
        ),
        migrations.CreateModel(
            name="SEOAudit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.CharField(max_length=255, verbose_name="URL")),
                (
                    "audit_date",
                    models.DateTimeField(auto_now_add=True, verbose_name="감사일"),
                ),
                (
                    "overall_score",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="전체 점수",
                    ),
                ),
                (
                    "title_score",
                    models.IntegerField(default=0, verbose_name="제목 점수"),
                ),
                (
                    "description_score",
                    models.IntegerField(default=0, verbose_name="설명 점수"),
                ),
                (
                    "keywords_score",
                    models.IntegerField(default=0, verbose_name="키워드 점수"),
                ),
                (
                    "content_score",
                    models.IntegerField(default=0, verbose_name="콘텐츠 점수"),
                ),
                (
                    "performance_score",
                    models.IntegerField(default=0, verbose_name="성능 점수"),
                ),
                ("issues", models.JSONField(default=list, verbose_name="발견된 이슈")),
                (
                    "recommendations",
                    models.JSONField(default=list, verbose_name="개선 권장사항"),
                ),
                (
                    "load_time",
                    models.FloatField(default=0.0, verbose_name="로드 시간 (초)"),
                ),
                (
                    "page_size",
                    models.IntegerField(default=0, verbose_name="페이지 크기 (KB)"),
                ),
            ],
            options={
                "verbose_name": "SEO 감사",
                "verbose_name_plural": "SEO 감사들",
                "ordering": ["-audit_date"],
                "indexes": [
                    models.Index(
                        fields=["url", "-audit_date"], name="main_seoaud_url_8f5b36_idx"
                    ),
                    models.Index(
                        fields=["-overall_score"], name="main_seoaud_overall_32f7f8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SEOMetadata",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "page_type",
                    models.CharField(
                        choices=[
                            ("homepage", "홈페이지"),
                            ("search", "검색 페이지"),
                            ("academy_detail", "학원 상세"),
                            ("region", "지역 페이지"),
                            ("subject", "과목 페이지"),
                            ("custom", "사용자 정의"),
                        ],
                        max_length=20,
                        verbose_name="페이지 유형",
                    ),
                ),
                (
                    "path",
                    models.CharField(max_length=255, unique=True, verbose_name="경로"),
                ),
                ("title", models.CharField(max_length=60, verbose_name="제목")),
                ("description", models.CharField(max_length=160, verbose_name="설명")),
                ("keywords", models.TextField(verbose_name="키워드")),
                (
                    "og_title",
                    models.CharField(blank=True, max_length=60, verbose_name="OG 제목"),
                ),
                (
                    "og_description",
                    models.CharField(
                        blank=True, max_length=160, verbose_name="OG 설명"
                    ),
                ),
                ("og_image", models.URLField(blank=True, verbose_name="OG 이미지")),
                (
                    "twitter_title",
                    models.CharField(
                        blank=True, max_length=60, verbose_name="트위터 제목"
                    ),
                ),
                (
                    "twitter_description",
                    models.CharField(
                        blank=True, max_length=160, verbose_name="트위터 설명"
                    ),
                ),
                (
                    "twitter_image",
                    models.URLField(blank=True, verbose_name="트위터 이미지"),
                ),
                (
                    "schema_type",
                    models.CharField(
                        blank=True, max_length=50, verbose_name="스키마 타입"
                    ),
                ),
                (
                    "schema_data",
                    models.JSONField(default=dict, verbose_name="스키마 데이터"),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성화")),
                (
                    "priority",
                    models.FloatField(
                        default=0.5,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="우선순위",
                    ),
                ),
                (
                    "changefreq",
                    models.CharField(
                        choices=[
                            ("always", "항상"),
                            ("hourly", "시간별"),
                            ("daily", "일별"),
                            ("weekly", "주별"),
                            ("monthly", "월별"),
                            ("yearly", "연별"),
                            ("never", "없음"),
                        ],
                        default="weekly",
                        max_length=10,
                        verbose_name="변경 빈도",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "SEO 메타데이터",
                "verbose_name_plural": "SEO 메타데이터들",
                "ordering": ["-priority", "path"],
                "indexes": [
                    models.Index(
                        fields=["page_type", "is_active"],
                        name="main_seomet_page_ty_0c616e_idx",
                    ),
                    models.Index(fields=["path"], name="main_seomet_path_6879fc_idx"),
                ],
            },
        ),
        migrations.CreateModel(
            name="SitemapEntry",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "url",
                    models.CharField(max_length=255, unique=True, verbose_name="URL"),
                ),
                (
                    "lastmod",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="마지막 수정"
                    ),
                ),
                (
                    "changefreq",
                    models.CharField(
                        choices=[
                            ("always", "항상"),
                            ("hourly", "시간별"),
                            ("daily", "일별"),
                            ("weekly", "주별"),
                            ("monthly", "월별"),
                            ("yearly", "연별"),
                            ("never", "없음"),
                        ],
                        default="weekly",
                        max_length=10,
                        verbose_name="변경 빈도",
                    ),
                ),
                (
                    "priority",
                    models.FloatField(
                        default=0.5,
                        validators=[
                            django.core.validators.MinValueValidator(0.0),
                            django.core.validators.MaxValueValidator(1.0),
                        ],
                        verbose_name="우선순위",
                    ),
                ),
                (
                    "page_type",
                    models.CharField(
                        choices=[
                            ("homepage", "홈페이지"),
                            ("academy", "학원"),
                            ("search", "검색"),
                            ("region", "지역"),
                            ("category", "카테고리"),
                        ],
                        max_length=20,
                        verbose_name="페이지 유형",
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="활성화")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "사이트맵 엔트리",
                "verbose_name_plural": "사이트맵 엔트리들",
                "ordering": ["-priority", "url"],
                "indexes": [
                    models.Index(
                        fields=["page_type", "is_active"],
                        name="main_sitema_page_ty_eb0be2_idx",
                    ),
                    models.Index(
                        fields=["-priority"], name="main_sitema_priorit_259888_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="AcademySEO",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("seo_title", models.CharField(max_length=60, verbose_name="SEO 제목")),
                (
                    "seo_description",
                    models.CharField(max_length=160, verbose_name="SEO 설명"),
                ),
                ("seo_keywords", models.TextField(verbose_name="SEO 키워드")),
                (
                    "slug",
                    models.SlugField(
                        max_length=200, unique=True, verbose_name="URL 슬러그"
                    ),
                ),
                ("local_keywords", models.TextField(verbose_name="지역 키워드")),
                (
                    "business_hours",
                    models.JSONField(default=dict, verbose_name="운영시간"),
                ),
                (
                    "review_count",
                    models.IntegerField(default=0, verbose_name="리뷰 수"),
                ),
                (
                    "average_rating",
                    models.FloatField(default=0.0, verbose_name="평균 평점"),
                ),
                (
                    "facebook_url",
                    models.URLField(blank=True, verbose_name="페이스북 URL"),
                ),
                (
                    "instagram_url",
                    models.URLField(blank=True, verbose_name="인스타그램 URL"),
                ),
                ("blog_url", models.URLField(blank=True, verbose_name="블로그 URL")),
                (
                    "seo_score",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                        verbose_name="SEO 점수",
                    ),
                ),
                (
                    "last_optimized",
                    models.DateTimeField(auto_now=True, verbose_name="마지막 최적화"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "academy",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="seo_data",
                        to="main.data",
                        verbose_name="학원",
                    ),
                ),
            ],
            options={
                "verbose_name": "학원 SEO",
                "verbose_name_plural": "학원 SEO들",
                "ordering": ["-seo_score", "academy__상호명"],
                "indexes": [
                    models.Index(
                        fields=["seo_score"], name="main_academ_seo_sco_930087_idx"
                    ),
                    models.Index(fields=["slug"], name="main_academ_slug_a3a2ff_idx"),
                ],
            },
        ),
    ]
